(()=>{var e={603:e=>{const t=e=>{console.log(`${e}`),document.getElementById("errorMessage").textContent=e,document.getElementById("taskMessage").classList.remove("hidden")};e.exports={handleError:t,sendPost:async(e,a,n)=>{const r=await fetch(e,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(a)}),s=await r.json();document.getElementById("taskMessage").classList.add("hidden"),s.error&&t(s.error),s.redirect&&(window.location=s.redirect),n&&n(s)},hideError:()=>{document.getElementById("taskMessage").classList.add("hidden")},makeid:function(){for(var e="",t="abcdefghijklmnopqrstuvwxyz",a=0;a<12;a++)e+=t.charAt(Math.floor(Math.random()*t.length));return e},getCsrfToken:async()=>{const e=await fetch("/getToken");return(await e.json()).csrfToken}}}},t={};function a(n){var r=t[n];if(void 0!==r)return r.exports;var s=t[n]={exports:{}};return e[n](s,s.exports,a),s.exports}(()=>{const e=a(603),t=t=>{t.preventDefault(),e.hideError();const a=t.target.querySelector("#taskTitle").value,n=t.target.querySelector("#taskDescription").value,r=t.target.querySelector("#taskDueDate").value,c=t.target.querySelector("#_csrf").value;return a&&n&&r?(e.sendPost(t.target.action,{title:a,description:n,currentSpot:"toDo",dueDate:r,_csrf:c},s),!1):(e.handleError("All fields are required!"),!1)},n=e=>React.createElement("form",{id:"taskForm",name:"taskForm",onSubmit:t,action:"/taskBoard",method:"POST",className:"taskForm"},React.createElement("label",{htmlFor:"title",class:"is-size-2 has-text-centered"}," Title: "),React.createElement("input",{class:"input is-normal",id:"taskTitle",type:"text",name:"title",placeholder:"task title"}),React.createElement("label",{htmlFor:"description",class:"is-size-2 has-text-centered"},"Description: "),React.createElement("input",{class:"input is-normal",id:"taskDescription",type:"text",name:"title",placeholder:"task description"}),React.createElement("label",{htmlFor:"cardDueDate",class:"is-size-2 has-text-centered"},"Due Date:"),React.createElement("input",{class:"input is-normal",id:"taskDueDate",type:"datetime-local",name:"cardDueDate"}),React.createElement("input",{className:"makeTaskSubmit",type:"submit",value:"Make task"}),React.createElement("input",{id:"_csrf",type:"hidden",name:"_csrf",value:e.csrf})),r=e=>React.createElement("div",{className:"card"},React.createElement("div",{className:"topOfCard"},React.createElement("h2",null,e.task.title)),React.createElement("div",{className:"middleOfCard"},React.createElement("h2",null,e.task.description)),React.createElement("div",{className:"bottomOfCard"},React.createElement("h2",null,e.task.dueDate))),s=async()=>{const e=await fetch("/getTasks");(e=>{const t=document.getElementById("toDo"),a=document.getElementById("inProgress"),n=document.getElementById("done"),s=(document.getElementById("garbage"),document.getElementById("burnerDivHome"));if(t.innerHTML="<strong>To Do</strong>",a.innerHTML="<strong>In Progress</strong>",n.innerHTML="<strong>Done</strong>",0===e.length)return React.createElement("div",{className:"taskList"},React.createElement("h3",{className:"emptytask"},"No tasks yet!"));for(let c=0;c<e.length;c++)document.getElementById("burnerDivCopy").id="burnerDiv",ReactDOM.render(React.createElement(r,{task:e[c]}),document.getElementById("burnerDiv")),"toDo"==e[c].currentSpot?t.append(document.getElementById("burnerDiv")):"inProgress"==e[c].currentSpot?a.append(document.getElementById("burnerDiv")):"done"==e[c].currentSpot&&n.append(document.getElementById("burnerDiv")),document.getElementById("burnerDiv").id=e[c].title,s.append(document.getElementById("burnerDivCopy").cloneNode(!0))})((await e.json()).tasks)};window.onload=async()=>{const e=await fetch("/getToken"),t=await e.json();ReactDOM.render(React.createElement(n,{csrf:t.csrfToken}),document.getElementById("makeTask")),s()}})()})();